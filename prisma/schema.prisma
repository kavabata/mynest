generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model controllers {
  controller String?
  device_id  Int
  id         Int     @default(autoincrement()) @id
  init       Float   @default(0.0)
  mode_id    Int?    @default(1)
  name       String?
  state      Int?    @default(0)
  type       Int     @default(0)
  devices    devices @relation(fields: [device_id], references: [id])
  modes      modes?  @relation(fields: [mode_id], references: [id])

  @@index([device_id], name: "controllerDevice")
  @@index([mode_id], name: "controllerMode")
}

model controllers_states {
  controller_id Int?
  device_id     Int?
  id            Int       @default(autoincrement()) @id
  state         String?
  updated       DateTime?

  @@unique([controller_id, device_id], name: "device")
}

model devices {
  created        DateTime?
  id             Int              @default(autoincrement()) @id
  ip             String?
  key            String?
  name           String?
  status         Int              @default(0)
  controllers    controllers[]
  sensors_states sensors_states[]
}

model modes {
  id          Int           @default(autoincrement()) @id
  name        String?
  controllers controllers[]
}

model rooms {
  id             Int              @default(autoincrement()) @id
  mode_id        Int?
  mode_updated   DateTime?
  name           String?
  sensors_states sensors_states[]
}

model rooms_devices {
  device_id Int?
  id        Int  @default(autoincrement()) @id
  room_id   Int?
}

model scenarios {
  controller_delay Int?
  controller_id    Int?
  controller_value Int?
  id               Int    @default(autoincrement()) @id
  mode_id          Int?
  sensor_end       Float?
  sensor_id        Int?
  sensor_start     Float?
  sort_order       Int?
}

model sensors {
  device_id      Int?
  id             Int              @default(autoincrement()) @id
  room_id        Int?
  sensor_delay   Int?
  type           String?
  sensors_states sensors_states[]
}

model sensors_logs {
  created   DateTime?
  device_id Int?
  id        Int       @default(autoincrement()) @id
  room_id   Int?
  sensor_id Int?
  value     String?
}

model sensors_states {
  device_id Int
  id        Int       @default(autoincrement()) @id
  room_id   Int?
  sensor_id Int
  updated   DateTime?
  value     String?
  devices   devices   @relation(fields: [device_id], references: [id])
  rooms     rooms?    @relation(fields: [room_id], references: [id])
  sensors   sensors   @relation(fields: [sensor_id], references: [id])

  @@index([device_id], name: "sensorDevice")
  @@index([room_id], name: "sensorRoom")
  @@unique([sensor_id, device_id, room_id], name: "device")
}