# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Device {
  id: ID!
  name: String!
  key: String
  ip: String
  status: DeviceStatus!
  created: Date
}

enum DeviceStatus {
  ONBOARD
  ACTIVE
  INACTIVE
  DELETED
}

"""Date custom scalar type"""
scalar Date

type Mode {
  id: ID!
  name: String!
}

type Room {
  id: ID!
  name: String!
  mode_id: String
  mode: Mode
}

type DeviceController {
  id: ID!
  device_id: String!
  devices: Device
  mode_id: String
  modes: Mode
  type: ControllerType!
  name: String!
  init: String!
  state: ControllerState!
}

enum ControllerType {
  SWITCH
  SWITCH2
  DIMMER
}

enum ControllerState {
  DISABLED
  ENABLED
  INACTIVE
  DELETED
}

type Sensor {
  id: ID!
  devices: Device
  rooms: Room
  type: SensorType!
  sensor_delay: String!
  state: String
}

enum SensorType {
  TIME
  PIR
  LIGHTLEVEL
  TEMPERATURE
  HUMIDITY
}

type Query {
  device(id: Float!): Device!
  devices(skip: Float = 0, take: Int = 25, status: DeviceStatus): [Device!]!
  rooms(skip: Float = 0, take: Int = 25): [Room!]!
  controller(id: Float!): DeviceController!
  controllers(skip: Float = 0, take: Int = 25, where: ControllerWhereArgs): [DeviceController!]!
  sensor(id: Float!): Sensor!
  sensors(skip: Float = 0, take: Int = 25, where: SensorWhereArgs): [Sensor!]!
}

input ControllerWhereArgs {
  state: ControllerState
  type: ControllerType
  mode_id: Float
  device_id: Float
}

input SensorWhereArgs {
  type: SensorType
  room_id: Float
  device_id: Float
}

type Mutation {
  addDevice(newDeviceData: NewDeviceInput!): Device!
  removeDevice(force: Boolean!, id: Float!): Boolean!
  addRoom(newRoomData: NewRoomInput!): Room!
  removeRoom(id: Float!): Boolean!
  addController(newControllerData: NewControllerInput!): DeviceController!
  removeController(id: Float!): Boolean!
  addSensor(newSensorData: NewSensorInput!): Sensor!
  addSensorState(type: SensorType!, key: String!, value: Float!): Sensor!
  removeSensor(id: Float!): Boolean!
}

input NewDeviceInput {
  name: String!
  key: String
}

input NewRoomInput {
  name: String!
}

input NewControllerInput {
  name: String!
  type: ControllerType
  init: Float!
  device: Float!
}

input NewSensorInput {
  type: SensorType!
  sensor_delay: Float!
  device: Float!
  room: Float!
}

type Subscription {
  deviceAdded: Device!
}
